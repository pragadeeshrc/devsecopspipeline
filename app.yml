apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: devsecopspipeline
  name: devsecopspipeline
spec:
  replicas: 7
  selector:
    matchLabels:
      app: devsecopspipeline
  template:
    metadata:
      labels:
        app: devsecopspipeline
    spec:
      containers:
        - name: devsecopspipeline
          image: CONTAINERIMAGE
          ports:
            - containerPort: 8080
          env:
            - name: VERSION
              value: CONTAINERIMAGE
            - name: MY_POD_NAME
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: DB_HOST
              value: "postgres"
            - name: DB_USER
              value: "postgres"
            - name: DB_PASSWORD
              value: "mysecretpassword"
            - name: DB_PORT
              value: "5432"
---
apiVersion: v1
kind: Service
metadata:
  name: clusterip-service
  labels:
    app: devsecopspipeline
spec:
  type: LoadBalancer
  selector:
    app: devsecopspipeline
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
      name: postgres
  selector:
    app: postgres
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: testpostgresdb
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: mysecretpassword
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:12.2
          envFrom:
            - configMapRef:
                name: postgres-config
          ports:
            - containerPort: 5432
              name: postgredb
          volumeMounts:
            - name: postgredb
              mountPath: /var/lib/postgresql/data
              subPath: postgres
  volumeClaimTemplates:
    - metadata:
        name: postgredb
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: gp2
        resources:
          requests:
            storage: 1Gi